<?xml version="1.0" encoding="UTF-8"?>


<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>

   <groupId>com.wonjoejo</groupId>
   <artifactId>myapp</artifactId>

   <name>intobox</name>

   <packaging>war</packaging>

   <version>1.0.0-BUILD-SNAPSHOT</version>

   <properties>

      <java-version>11</java-version>

      <java-home>${env.JAVA_HOME}</java-home>

      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

      <org.springframework-version>5.3.11</org.springframework-version>
      <org.aspectj-version>1.9.7</org.aspectj-version>
      <org.slf4j-version>1.7.32</org.slf4j-version>

   </properties>


   <dependencies>

      <!-- =============================Spring=========================== -->

      <!-- Spring context-->
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-context</artifactId>
         <version>${org.springframework-version}</version>

         <!-- 예외 처리 부분 -->
         <exclusions>
            <!-- Exclude Commons Logging in favor of SLF4j -->
            <exclusion>
               <groupId>commons-logging</groupId>
               <artifactId>commons-logging</artifactId>
            </exclusion>
         </exclusions>

      </dependency>

      <!-- spring-mvc -->
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-webmvc</artifactId>
         <version>${org.springframework-version}</version>
      </dependency>

      <!-- spring test -->
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-test</artifactId>
         <version>${org.springframework-version}</version>

         <!-- 이 라이브러리는 테스트 할 때만 사용하겠다는 의미 -->
         <scope>test</scope>
      </dependency>
      
      <!-- spring-jdbc -->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-jdbc</artifactId>
          <version>${org.springframework-version}</version>
      </dependency>
      
      <!-- spring-tx -->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-tx</artifactId>
          <version>${org.springframework-version}</version>
      </dependency>
      
      <!-- mybatis -->
       <dependency>
         <groupId>org.mybatis</groupId>
         <artifactId>mybatis</artifactId>
         <version>3.5.7</version>
       </dependency>
       
       <!-- mybatis-spring -->
      <dependency>
          <groupId>org.mybatis</groupId>
          <artifactId>mybatis-spring</artifactId>
          <version>2.0.6</version>
      </dependency>
             
      <!-- log4jdbc-log4j2-jdbc4.1 -->
      <dependency>
          <groupId>org.bgee.log4jdbc-log4j2</groupId>
          <artifactId>log4jdbc-log4j2-jdbc4.1</artifactId>
          <version>1.16</version>
      </dependency>
   
       <!-- HikariCP -->
       <dependency>
         <groupId>com.zaxxer</groupId>
         <artifactId>HikariCP</artifactId>
         <version>5.0.0</version>
       </dependency>


      <!-- ============================ AspectJ ========================== -->
      
      <!-- AspectJ -->
      <dependency>
         <groupId>org.aspectj</groupId>
         <artifactId>aspectjrt</artifactId>
         <version>${org.aspectj-version}</version>
      </dependency>
      
      <!-- Aspectj weaver -->
      <dependency>
          <groupId>org.aspectj</groupId>
          <artifactId>aspectjweaver</artifactId>
          <version>${org.aspectj-version}</version>
          <scope>runtime</scope>
      </dependency>
         

      <!-- =============================slf4J=========================== -->

      <!-- Logging -->
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-api</artifactId>
         <version>${org.slf4j-version}</version>
      </dependency>

      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>jcl-over-slf4j</artifactId>
         <version>${org.slf4j-version}</version>
         <scope>runtime</scope>
      </dependency>

      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-log4j12</artifactId>
         <version>${org.slf4j-version}</version>

         <scope>runtime</scope>

      </dependency>
      
      <!-- ============================ log4j 관련 ========================== -->
      
      
      <!-- log4j2-core -->
      <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-core</artifactId>
          <version>2.14.1</version>
      </dependency>
      
      <!-- log4j -->
      <dependency>
         <groupId>log4j</groupId>
         <artifactId>log4j</artifactId>
         <version>1.2.17</version>
         <scope>runtime</scope>
      </dependency>
       

      <!-- ============================logging========================== -->


      <!-- @Inject -->
      <!-- 필요에 따라 유지 or 삭제 -->
      <dependency>
         <groupId>javax.inject</groupId>
         <artifactId>javax.inject</artifactId>
         <version>1</version>
      </dependency>


      <!-- ======================== Web 표준 (***) Servlet/JSP ============================== -->

      <!-- Servlet -->
      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>javax.servlet-api</artifactId>
         <version>4.0.1</version>
         <scope>provided</scope>
      </dependency>

      <!-- provided는 위의 라이브러리는 별도의 실행환경에서 제공되는
      라이브러리로 컴파일 할 때에는 사용되지만 실행할때는 WAS같은 
      별도의 실행환경에서 대신 제공되는 라이브러리를 써야 한다 -->

      <dependency>
         <groupId>javax.servlet.jsp</groupId>
         <artifactId>javax.servlet.jsp-api</artifactId>
         <version>2.3.3</version>

         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>jstl</artifactId>
         <version>1.2</version>
      </dependency>

      <!-- ======================== Web 표준 (***) ============================== -->

      <!-- ======================== TEST와 관련된 의존성 (***) ============================== -->

      <!-- *주의 현재 최신버전의 스프링 프레임워크를 사용하려면, 아래의 Junit 버전을 최소한
      4.11 이상으로 지정하여야 한다 -->

      <!-- Test -->
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <version>4.13.2</version>
         <scope>test</scope>
      </dependency>
      
      <!-- ======================== JDBC/DRVIER SPY ============================== -->

      <dependency>
         <groupId>com.oracle.database.jdbc</groupId>
         <artifactId>ojdbc8-production</artifactId>
         <version>21.3.0.0</version>
         <type>pom</type>

         <exclusions>
            <exclusion>
               <groupId>com.oracle.database.ha</groupId>
               <artifactId>simplefan</artifactId>
            </exclusion>

            <exclusion>
               <groupId>com.oracle.database.ha</groupId>
               <artifactId>ons</artifactId>
            </exclusion>

            <exclusion>
               <groupId>com.oracle.database.jdbc</groupId>
               <artifactId>rsi</artifactId>
            </exclusion>

            <exclusion>
               <groupId>com.oracle.database.jdbc</groupId>
               <artifactId>ucp</artifactId>
            </exclusion>

            <exclusion>
               <groupId>com.oracle.database.xml</groupId>
               <artifactId>xdb</artifactId>
            </exclusion>

            <exclusion>
               <groupId>com.oracle.database.xml</groupId>
               <artifactId>xmlparserv2</artifactId>
            </exclusion>
         </exclusions>

      </dependency>

         
      
      
      <!-- ======================== lombok ============================== -->
      
      <dependency>
         <groupId>org.projectlombok</groupId>
         <artifactId>lombok</artifactId>
         <version>1.18.22</version>
         <scope>provided</scope>
        </dependency>
      
      <!-- jackson-databind -->
      <!-- 스프링의 컨트롤러 메소드가 뷰의 이름이 아니라, 일반 자바객체(문자열도 포함)를 반환하는 경우
            스프링이 아래의 변환 라이브러리를 자동으로 찾아서 사용하고, 이 라이브러리를 이용해서
            반환한 자바객체를 JSON/XML로 변환 해서 응답문서 BODY에 담아서 보내는데에 사용함-->
      <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
          <version>2.13.0</version>
      </dependency>

      <!-- commons-fileupload -->
      <dependency>
         <groupId>commons-fileupload</groupId>
         <artifactId>commons-fileupload</artifactId>
         <version>1.4</version>
      </dependency>
      
      <!-- spring-security-core -->
	<dependency>
	    <groupId>org.springframework.security</groupId>
	    <artifactId>spring-security-core</artifactId>
	    <version>5.5.3</version>
	</dependency>
	      

   </dependencies>


   <!-- ======================== BUILD ============================== -->

   <build>
   
      <finalName>/</finalName>
      
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-eclipse-plugin</artifactId>
            <version>2.10</version>

            <configuration>
               <additionalProjectnatures>
                  <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
               </additionalProjectnatures>

               <additionalBuildcommands>
                  <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
               </additionalBuildcommands>

               <downloadSources>true</downloadSources>
               <downloadJavadocs>false</downloadJavadocs>
            </configuration>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.8.1</version>

            <configuration>
               <verbose>true</verbose>
               <fork>true</fork>

               <meminitial>64m</meminitial>
               <maxmem>128m</maxmem>

               <encoding>${project.build.sourceEncoding}</encoding>

               <source>${java-version}</source>
               <target>${java-version}</target>

               <executable>${java-home}\bin\javac</executable>
               <compilerArgs>
                  <arg>-verbose</arg>
                  <arg>-Xlint:all</arg>
               </compilerArgs>

               <showWarnings>true</showWarnings>
               <showDeprecation>true</showDeprecation>
            </configuration>
         </plugin>

         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.6.0</version>

            <configuration>
               <mainClass>org.test.int1.Main</mainClass>
            </configuration>
         </plugin>
      </plugins>
   </build>

</project>